# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: React Native CI

on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev]

jobs:
  # build:
  #   runs-on: macos-latest

  #   strategy:
  #     matrix:
  #       node-version: [17.x]
  #       # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v2

  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: "npm"

  #     - run: npm ci
  #     - run: npm run build --if-present
  #     - run: npm run test

  # test:
  #   needs: build

  #   runs-on: macos-latest

  #   steps:
  #     - name: Check out repository code
  #       uses: actions/checkout@v2

  #     # - name: Use Node.js to run test
  #     #   uses: actions/setup-node@v2

  #     - name: Run Test
  #       run: |
  #         npm ci
  #         npm run test

  # e2e_ios:
  #   # needs: build

  #   runs-on: macos-latest

  #   steps:
  #     - name: Check out repository
  #       uses: actions/checkout@v2

  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 16.x
  #         cache: "npm"

  #     - name: Install iOS Plaform dependencies
  #       run: |
  #         brew tap wix/brew
  #         brew install applesimutils

  #     - name: Install project npm dependencies
  #       run: npm ci

  #     - name: Pod install
  #       run: |
  #         cd ./ios
  #         pod install
  #         cd ..

  #     - name: Detox build
  #       run: npm run e2e:build ios.sim.debug

  #     - name: Detox test
  #       run: |
  #         npm start &
  #         METRO_BUNDLER_PID=$!
  #         npm run e2e:test ios.sim.debug
  #         DETOX_EXIT_CODE=$?
  #         kill $METRO_BUNDLER_PID
  #         exit $DETOX_EXIT_CODE

  e2e_android:
    # needs: build

    runs-on: macos-latest

    # strategy:
    #   matrix:
    #     java-version: [8, 17]
    # api-level: [29, 31, 32]
    # target: [default, google_apis]

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      # - name: Use Node.js
      #   uses: actions/setup-node@v2
      #   with:
      #     node-version: 16.x
      #     cache: 'npm'

      # - name: Install project npm dependencies
      #   run: npm ci

      - name: Install JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 8

      - name: Install JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Install emulator and create avd
        run: |
          export PATH=$PATH:$ANDROID_HOME/emulator
          export PATH=$PATH:$ANDROID_HOME/tools
          export PATH=$PATH:$ANDROID_HOME/tools/bin
          export PATH=$PATH:$ANDROID_HOME/platform-tools
          JAVA_HOME=$(/usr/libexec/java_home -v 1.8) sdkmanager --install emulator
          JAVA_HOME=$(/usr/libexec/java_home -v 1.8) sdkmanager "system-images;android-31;default;x86_64"
          JAVA_HOME=$(/usr/libexec/java_home -v 1.8) sdkmanager --licenses
          JAVA_HOME=$(/usr/libexec/java_home -v 1.8) avdmanager create avd -n Pixel_5_API_31 -d pixel --package "system-images;android-31;default;x86_64"

      # - name: Detox build
      #   run: npm run e2e:build android.emu.debug

      - name: Boot emulator
        env:
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'
        run: |
          echo "Starting emulator"
          nohup $ANDROID_HOME/tools/bin/sdkmanager -verbose -no-window -no-audio -gpu host @Pixel_5_API_31 &
          $ANDROID_HOME/platform-tools/adb devices
          echo "Emulator started"
# $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'

      # - name: Run an android app
      #   run:
      #     npm run android

      # - name: Detox Test
      #   run: |
      #     npm start &
      #     METRO_BUNDLER_PID=$!
      #     npm run e2e:test android.emu.debug
      #     DETOX_EXIT_CODE=$?
      #     kill $METRO_BUNDLER_PID
      #     exit $DETOX_EXIT_CODE

      # - name: Detox test
      #   uses: reactivecircus/android-emulator-runner@v2
      #   with:
      #     api-level: 31
      #     target: default
      #     arch: arm64-v8a
      #     profile: pixel
      #     avd-name: Pixel_5_API_31
      # - shell: bash
      #   run: |
      #     npm start &
      #     METRO_BUNDLER_PID=$!
      #     npm run e2e:test android.emu.debug
      #     DETOX_EXIT_CODE=$?
      #     kill $METRO_BUNDLER_PID
      #     exit $DETOX_EXIT_CODE
